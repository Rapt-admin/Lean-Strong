# Generated by Django 5.0.6 on 2024-08-09 12:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0009_userdietplan'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blog_id', models.AutoField(db_column='Blog_id', primary_key=True, serialize=False)),
                ('blog_title', models.CharField(blank=True, db_column='Blog_title', max_length=100, null=True)),
                ('blog_description', models.CharField(blank=True, db_column='Blog_description', max_length=10000, null=True)),
                ('author', models.CharField(blank=True, db_column='Author', max_length=45, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=45, null=True)),
            ],
            options={
                'db_table': 'blog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaigns',
            fields=[
                ('campaign_id', models.AutoField(db_column='Campaign_id', primary_key=True, serialize=False)),
                ('campaign_title', models.CharField(blank=True, db_column='Campaign_title', max_length=100, null=True)),
                ('campaign_description', models.CharField(blank=True, db_column='Campaign_description', max_length=45, null=True)),
                ('launch_locations', models.CharField(blank=True, db_column='Launch_locations', max_length=100, null=True)),
                ('launch_locatons_url', models.CharField(blank=True, db_column='Launch_locatons_url', max_length=1000, null=True)),
                ('campaign_run_by', models.CharField(blank=True, db_column='Campaign_run_by', max_length=100, null=True)),
                ('created_on', models.DateTimeField(blank=True, db_column='Created_on', null=True)),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=45, null=True)),
            ],
            options={
                'db_table': 'campaigns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoachUsers',
            fields=[
                ('coach_users_id', models.AutoField(primary_key=True, serialize=False)),
                ('coach_type', models.CharField(blank=True, db_column='Coach_type', max_length=50, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'coach_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommunicationProvider',
            fields=[
                ('communication_provider_id', models.AutoField(db_column='Communication_provider_id', primary_key=True, serialize=False)),
                ('provider_name', models.CharField(blank=True, db_column='Provider_name', max_length=45, null=True)),
                ('login_username', models.CharField(blank=True, db_column='Login_username', max_length=45, null=True)),
                ('login_password', models.CharField(blank=True, db_column='Login_password', max_length=45, null=True)),
                ('account_id', models.CharField(blank=True, db_column='Account_ID', max_length=45, null=True)),
                ('api_key', models.CharField(blank=True, db_column='API_Key', max_length=200, null=True)),
                ('api_secret', models.CharField(blank=True, db_column='API_Secret', max_length=45, null=True)),
                ('communication_type', models.CharField(blank=True, db_column='Communication_type', max_length=45, null=True)),
                ('api_url', models.CharField(blank=True, db_column='API_URL', max_length=500, null=True)),
                ('callback_url', models.CharField(blank=True, db_column='Callback_URL', max_length=500, null=True)),
                ('active_provider_ind', models.IntegerField(blank=True, db_column='Active_provider_ind', null=True)),
                ('created_on', models.DateTimeField(blank=True, db_column='Created_on', null=True)),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=45, null=True)),
            ],
            options={
                'db_table': 'communication_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupSessions',
            fields=[
                ('group_session_id', models.AutoField(db_column='Group_session_id', primary_key=True, serialize=False)),
                ('group_session_name', models.CharField(blank=True, db_column='Group_session_name', max_length=50, null=True)),
                ('grooup_session_about', models.CharField(blank=True, db_column='Grooup_session_about', max_length=500, null=True)),
                ('group_session_duration', models.IntegerField(blank=True, db_column='Group_Session_Duration', null=True)),
                ('group_session_start_date', models.DateField(blank=True, db_column='Group_Session_start_date', null=True)),
                ('group_session_start_time', models.TimeField(blank=True, db_column='Group_Session_start_time', null=True)),
                ('group_session_end_time', models.TimeField(blank=True, db_column='Group_Session_end_time', null=True)),
                ('group_session_created_by', models.IntegerField(db_column='Group_Session_created_by')),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'group_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('offer_id', models.AutoField(db_column='Offer_id', primary_key=True, serialize=False)),
                ('offer_subject', models.CharField(blank=True, db_column='Offer_Subject', max_length=50, null=True)),
                ('offer_detail', models.CharField(blank=True, db_column='Offer_detail', max_length=2000, null=True)),
                ('coupon_code', models.CharField(blank=True, db_column='Coupon_code', max_length=50, null=True)),
                ('discount', models.CharField(blank=True, db_column='Discount', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=1000, null=True)),
                ('user_id', models.IntegerField(db_column='User_id')),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'offers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBodyCompositionAnalysis',
            fields=[
                ('user_body_composition_analysis_id', models.AutoField(db_column='User_Body_Composition_Analysis_id', primary_key=True, serialize=False)),
                ('body_fat_percentage', models.CharField(blank=True, db_column='Body_Fat_percentage', max_length=50, null=True)),
                ('body_type', models.CharField(blank=True, db_column='Body_type', max_length=50, null=True)),
                ('basal_metabolic_rate_bmr_field', models.CharField(blank=True, db_column='Basal_Metabolic_Rate(BMR)', max_length=50, null=True)),
                ('total_daily_energy_expenditure', models.CharField(blank=True, db_column='Total_daily_energy_expenditure', max_length=50, null=True)),
                ('visceral_fat', models.CharField(blank=True, db_column='Visceral_Fat', max_length=50, null=True)),
                ('fat_mass', models.CharField(blank=True, db_column='Fat_Mass', max_length=50, null=True)),
                ('weight', models.CharField(blank=True, db_column='Weight', max_length=50, null=True)),
                ('body_mass_index_bmi_field', models.CharField(blank=True, db_column='Body_Mass_Index(BMI)', max_length=50, null=True)),
                ('uploaded_medical_report', models.CharField(blank=True, db_column='Uploaded_Medical_Report', max_length=50, null=True)),
                ('biological_age', models.CharField(blank=True, db_column='Biological_Age', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_body_composition_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBodyMeasurement',
            fields=[
                ('user_body_measurement_id', models.AutoField(db_column='User_Body_Measurement_id', primary_key=True, serialize=False)),
                ('neck_size', models.IntegerField(db_column='Neck_size')),
                ('chest_size', models.IntegerField(db_column='Chest_size')),
                ('shoulder_size', models.IntegerField(db_column='Shoulder_size')),
                ('arms_size', models.IntegerField(db_column='Arms_size')),
                ('abs_size', models.IntegerField(db_column='Abs_size')),
                ('waist_size', models.IntegerField(db_column='Waist_size')),
                ('hips_size', models.IntegerField(db_column='Hips_size')),
                ('thighs_size', models.IntegerField(db_column='Thighs_size')),
                ('calves_size', models.IntegerField(db_column='Calves_size')),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_body_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDietPlans',
            fields=[
                ('user_diet_plan_id', models.AutoField(db_column='User_diet_plan_id', primary_key=True, serialize=False)),
                ('diet_name', models.CharField(blank=True, db_column='Diet_name', max_length=45, null=True)),
                ('diet_detail', models.CharField(blank=True, db_column='Diet_detail', max_length=10000, null=True)),
                ('diet_start_date', models.DateTimeField(blank=True, db_column='Diet_start_date', null=True)),
                ('diet_end_date', models.DateTimeField(blank=True, db_column='Diet_end_date', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('diet_validity', models.IntegerField(blank=True, db_column='Diet_validity', null=True)),
                ('early_morning_meal', models.CharField(blank=True, db_column='Early_morning_meal', max_length=500, null=True)),
                ('pre_workout_meal', models.CharField(blank=True, db_column='Pre-workout_meal', max_length=500, null=True)),
                ('post_workout_meal', models.CharField(blank=True, db_column='Post-workout_meal', max_length=500, null=True)),
                ('breakfast_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('before_lunch_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('lunch_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('evening_snacks_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('dinner_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('before_bed_meal', models.CharField(blank=True, max_length=500, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_diet_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFitnessDetails',
            fields=[
                ('user_fitness_detail_id', models.AutoField(db_column='User_fitness_detail_id', primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=50, null=True)),
                ('fitness_goal', models.CharField(blank=True, db_column='Fitness_goal', max_length=50, null=True)),
                ('muscle_focus_area', models.CharField(blank=True, db_column='Muscle_Focus_Area', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('birth_date', models.CharField(blank=True, db_column='Birth_date', max_length=50, null=True)),
                ('current_weight', models.IntegerField(db_column='Current_weight')),
                ('weight_goal', models.IntegerField(db_column='Weight_goal')),
                ('current_bmi', models.IntegerField(db_column='Current_BMI')),
                ('height_in_cm_field', models.IntegerField(db_column='Height (In cm)')),
                ('workout_frequency_per_week', models.IntegerField(db_column='Workout_frequency_per_week')),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_fitness_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroupSessions',
            fields=[
                ('user_group_session_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_about', models.CharField(blank=True, db_column='Session_about', max_length=50, null=True)),
                ('session_join_status', models.CharField(blank=True, db_column='Session_join_status', max_length=45, null=True)),
                ('session_end_status', models.CharField(blank=True, db_column='Session_end_status', max_length=45, null=True)),
                ('is_rescheduled', models.CharField(blank=True, db_column='Is_rescheduled', max_length=45, null=True)),
                ('user_session_parent_id', models.IntegerField(blank=True, db_column='User_session_parent_id', null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_group_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserHealthAndLifestyleTracker',
            fields=[
                ('user_health_and_lifestyle_tracker_id', models.AutoField(db_column='User_health_and_lifestyle_tracker_id', primary_key=True, serialize=False)),
                ('water_intake_litre_field', models.CharField(blank=True, db_column='Water_intake(litre)', max_length=50, null=True)),
                ('daily_sleep_hrs_field', models.CharField(blank=True, db_column='Daily_sleep(Hrs)', max_length=50, null=True)),
                ('blood_suagr_reading', models.CharField(blank=True, db_column='Blood_suagr_reading', max_length=50, null=True)),
                ('blood_pressure_reading', models.CharField(blank=True, db_column='Blood_pressure_reading', max_length=50, null=True)),
                ('total_cholesterol', models.CharField(blank=True, max_length=50, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_health_and_lifestyle_tracker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('user_notification_id', models.AutoField(db_column='User_Notification_id', primary_key=True, serialize=False)),
                ('notification_subject', models.CharField(blank=True, db_column='Notification_Subject', max_length=50, null=True)),
                ('notification_detail', models.CharField(blank=True, db_column='Notification_detail', max_length=2000, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=1000, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('user_rating_id', models.AutoField(db_column='User_rating_id', primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, db_column='Comment', max_length=2000, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRecipes',
            fields=[
                ('user_recipe_id', models.AutoField(primary_key=True, serialize=False)),
                ('recipe_name', models.CharField(blank=True, db_column='Recipe_name', max_length=50, null=True)),
                ('recipe_ingredients', models.CharField(blank=True, db_column='Recipe_Ingredients', max_length=45, null=True)),
                ('recipe_description', models.CharField(blank=True, db_column='Recipe_description', max_length=1000, null=True)),
                ('recipe_procedure', models.CharField(blank=True, db_column='Recipe_procedure', max_length=45, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_recipes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSessions',
            fields=[
                ('user_session_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_about', models.CharField(blank=True, db_column='Session_about', max_length=50, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('session_date', models.DateField(blank=True, db_column='Session_date', null=True)),
                ('session_end_time', models.TimeField(blank=True, db_column='Session_end_time', null=True)),
                ('session_start_time', models.TimeField(blank=True, db_column='Session_start_time', null=True)),
                ('session_join_status', models.CharField(blank=True, db_column='Session_join_status', max_length=45, null=True)),
                ('session_end_status', models.CharField(blank=True, db_column='Session_end_status', max_length=45, null=True)),
                ('is_rescheduled', models.CharField(blank=True, db_column='Is_rescheduled', max_length=45, null=True)),
                ('user_session_parent_id', models.IntegerField(blank=True, db_column='User_session_parent_id', null=True)),
                ('session_type', models.CharField(blank=True, db_column='Session_type', max_length=45, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSocialMediaAccounts',
            fields=[
                ('user_social_media_account_id', models.AutoField(db_column='User_social_media_account_id', primary_key=True, serialize=False)),
                ('social_media_platform_name', models.CharField(blank=True, db_column='Social_media_platform_name', max_length=200, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=200, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_social_media_accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutPlans',
            fields=[
                ('user_workout_plan_id', models.AutoField(db_column='User_workout_plan_id', primary_key=True, serialize=False)),
                ('workout_ids', models.CharField(db_column='Workout_ids', max_length=500)),
                ('workout_days', models.CharField(db_column='Workout_days', max_length=500)),
                ('suggested_workouts_period', models.CharField(blank=True, db_column='Suggested_Workouts_Period', max_length=45, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'user_workout_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('workout_id', models.AutoField(db_column='Workout_id', primary_key=True, serialize=False)),
                ('workout_name', models.CharField(blank=True, max_length=45, null=True)),
                ('workout_description', models.CharField(blank=True, max_length=500, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'workout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutCategory',
            fields=[
                ('workout_category_id', models.AutoField(db_column='Workout_category_id', primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('workout_category_name', models.CharField(blank=True, max_length=45, null=True)),
                ('workout_category_description', models.CharField(blank=True, max_length=45, null=True)),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'workout_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutType',
            fields=[
                ('workout_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('workout_type', models.CharField(blank=True, max_length=45, null=True)),
                ('workout_type_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('created_on', models.DateTimeField(db_column='Created_on')),
                ('delete_ind', models.CharField(blank=True, db_column='Delete_ind', max_length=5, null=True)),
            ],
            options={
                'db_table': 'workout_type',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='UserDietPlan',
        ),
    ]
