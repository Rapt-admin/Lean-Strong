"""
Django settings for Lean_and_Strong project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from environ import Env
import logging
import datetime




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


env = Env()
env.read_env(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-whxc-n9dyn$n+yl_3d=g+v9(c9d#bpi0$yy3rb@p+rer3u#ygi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'home.entities.social_media',
    'user',
    'dietitian',
    'fitnessCoach',
    'adminUser',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Lean_and_Strong.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR,'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Lean_and_Strong.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.sqlite3',
  #      'NAME': BASE_DIR / 'db.sqlite3',
  #  }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'leanandstrongsyslive',  # Replace with your database name(schema)
        'USER': 'root',       # Replace with your MySQL username
        'PASSWORD': 'pass1234',  # Replace with your MySQL password
        'HOST': 'localhost',
        'PORT': '3306',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
   BASE_DIR / "assets/home/",
   BASE_DIR / "assets/",

]

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AUTHENTICATION_BACKENDS = [
#     'home.backends.CustomUserBackend',
#     'django.contrib.auth.backends.ModelBackend',  # Keep this if you also use Django's built-in User model
# ]

AUTH_USER_MODEL = 'home.User'


# settings.py
FACEBOOK_OAUTH2 = {
    'CLIENT_ID': '457780996963842',
    'CLIENT_SECRET': '8b5c107e20bcb8ca18e8f8aa81d92a1b',
    'REDIRECT_URI': 'http://localhost:8000/facebook/callback/',
    'AUTHORIZATION_URL': 'https://www.facebook.com/v10.0/dialog/oauth',
    'TOKEN_URL': 'https://graph.facebook.com/v10.0/oauth/access_token',
    'USER_INFO_URL': 'https://graph.facebook.com/me?fields=id,name,email,picture'
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            #'format': '{levelname} {asctime} the function "{funcName}" of the file "{filename}" on line number {lineno}:  {process:d} {thread:d} {message}',
            'format': '{levelname} {asctime} file "{filename}" on line number {lineno}: {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'debug_file': {            
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': f'logs/debug__{datetime.datetime.today().strftime("%Y-%m-%d")}.log',
            'level': 'DEBUG',
            'formatter': 'verbose',
        },
        'info_file': {            
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': f'logs/LeanAndStrong_{datetime.datetime.today().strftime("%Y-%m-%d")}.log',
            'level': 'INFO',
            'formatter': 'verbose',
        },
        'error_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'level': 'ERROR',
            'formatter': 'verbose',
            'filename': f'logs/error_{datetime.datetime.today().strftime("%Y-%m-%d")}.log',
        },
        'warning_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'level': 'WARNING',
            'formatter': 'verbose',
            'filename': f'logs/warning_{datetime.datetime.today().strftime("%Y-%m-%d")}.log',
        },
        'critical_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'level': 'CRITICAL',
            'formatter': 'verbose',
            'filename': f'logs/error_{datetime.datetime.today().strftime("%Y-%m-%d")}.log',
        },
    },   
    'root': {
       'handlers': ['info_file'],
       'level': 'INFO'
    }, 
    'loggers': {
        'django': {
            # Use the console and file logger
            'handlers': ['debug_file','info_file','error_file','warning_file','critical_file'],
            'level': 1,
        },
    },
}
